{"version":3,"sources":["helpers/weatherAPI.js","hooks/useWeather.jsx","assets/closeX.svg","assets/lupa.svg","assets/chevronR.svg","components/SearchPanel.jsx","assets/Sleet.svg","assets/Hail.svg","assets/Thunderstorm.svg","assets/HeavyRain.svg","assets/LightRain.svg","assets/Showers.svg","assets/HeavyCloud.svg","assets/LightCloud.svg","assets/Clear.svg","assets/Snow.svg","helpers/imageList.js","assets/gps.svg","assets/position.svg","components/ActualWeather.jsx","components/cards/DailyForecast.jsx","components/cards/ForecastDetails.jsx","components/WeatherForecast.jsx","components/MainScreen.jsx","index.js"],"names":["cors","URLBase","getWeather","a","location","axios","get","data","currentDay","title","consolidated_weather","shift","weekForecast","getMatches","params","query","length","id","name","cities","map","city","woeid","useWeather","useState","setLocation","setCurrentDay","forecast","setForecast","isLoading","setIsLoading","fetchWeather","console","log","useEffect","SearchPanel","inputText","useRef","matches","setMatches","setLoading","canvas","searchLocation","current","value","ref","className","data-bs-scroll","data-bs-backdrop","tabIndex","type","data-bs-dismiss","aria-label","src","closeIcon","alt","height","searchIcon","width","onChange","placeholder","role","style","match","onClick","chevronR","getWeatherImg","abbr","sn","Snow","sl","Sleet","h","Hail","t","Thunderstorm","hr","HeavyRain","lr","LightRain","s","Showers","hc","HeavyCloud","lc","LightCloud","c","Clear","ActualWeather","today","img","setImage","pos","weather_state_abbr","imgTest","data-bs-toggle","data-bs-target","aria-controls","gps","the_temp","toFixed","weather_state_name","applicable_date","position","DailyForecast","day","format","Date","Math","round","max_temp","min_temp","ForecastDetails","number","unit","aria-valuemin","aria-valuemax","WeatherForecast","stats","setStats","wind_speed","humidity","visibility","air_pressure","i","stat","idx","MainScreen","color","highlightColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAIMA,EAAO,uCACPC,EAAUD,EAAO,4CAGVE,EAAU,uCAAG,gDAAAC,EAAA,6DAAOC,EAAP,+BAAkB,MAAlB,SACDC,IAAMC,IAAN,UAAaL,GAAb,OAAuBG,IADtB,uBAChBG,EADgB,EAChBA,KACFC,EAFkB,aAGtBC,MAAOF,EAAKE,OACTF,EAAKG,qBAAqB,IAE/BH,EAAKG,qBAAqBC,QACpBC,EAAeL,EAAKG,qBAPF,kBAQjB,CAAEF,aAAYI,iBARG,2CAAH,qDAUVC,EAAU,uCAAG,WAAOT,GAAP,iBAAAD,EAAA,sEACLE,IAAMC,IAbTN,uFAawB,CAAEc,OAAQ,CAAEC,MAAOX,KADnC,UAEC,KADnBG,EADkB,QAEfA,KAAKS,OAFU,yCAEW,CAAC,CAAEC,GAAI,MAAOC,KAAM,gBAF/B,cAGlBC,EAASZ,EAAKA,KAAKa,KAAI,SAAAC,GAAI,MAAK,CACpCH,KAAMG,EAAKZ,MACXQ,GAAII,EAAKC,UALa,kBAOjBH,GAPiB,2CAAH,sDCYRI,EA3BI,WAAO,IAAD,EACSC,qBADT,mBAChBpB,EADgB,KACNqB,EADM,OAEaD,mBAAS,IAFtB,mBAEhBhB,EAFgB,KAEJkB,EAFI,OAGSF,mBAAS,IAHlB,mBAGhBG,EAHgB,KAGNC,EAHM,OAIWJ,oBAAS,GAJpB,mBAIhBK,EAJgB,KAILC,EAJK,KAMjBC,EAAY,uCAAG,gCAAA5B,EAAA,6DACnB2B,GAAa,GADM,kBAG0B5B,EAAWE,GAHrC,gBAGTI,EAHS,EAGTA,WAAYI,EAHH,EAGGA,aACpBc,EAAclB,GACdoB,EAAYhB,GALK,kDAOjBoB,QAAQC,IAAI,YAAZ,MAPiB,yBASjBH,GAAa,GATI,6EAAH,qDAkBlB,OALAI,qBAAU,WACRF,QAAQC,IAAI,sBAAuB7B,GACnC2B,MACC,CAAC3B,IAEG,CAAEI,aAAYmB,WAAUF,cAAaI,cC3B/B,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,qC,OCkF1BM,EA5EK,SAAC,GAAqB,IAAnBV,EAAkB,EAAlBA,YACfW,EAAYC,iBAAO,MADc,EAETb,mBAAS,IAFA,mBAEhCc,EAFgC,KAEvBC,EAFuB,OAGPf,oBAAS,GAHF,mBAGhCK,EAHgC,KAGrBW,EAHqB,KAIjCC,EAASJ,iBAAO,MAEhBK,EAAc,uCAAG,4BAAAvC,EAAA,0DACjBiC,EAAUO,QAAQC,MADD,wBAEnBL,EAAW,IACXC,GAAW,GAHQ,kBAKI3B,EAAWuB,EAAUO,QAAQC,OALjC,OAKXzB,EALW,OAMjBoB,EAAWpB,GANM,kDAQjBa,QAAQC,IAAI,OAAZ,MARiB,yBAUjBO,GAAW,GAVM,6EAAH,qDAkBpB,OACE,sBACEK,IAAKJ,EACLK,UAAU,wCACVC,iBAAe,OACfC,mBAAiB,QACjBC,SAAS,KACThC,GAAG,sBANL,UAOE,qBAAK6B,UAAU,6CAAf,SACE,qBACEI,KAAK,SACLJ,UAAU,GACVK,kBAAgB,YAChBC,aAAW,QAJb,SAKE,qBAAKC,IAAKC,EAAWC,IAAI,QAAQC,OAAO,WAG5C,sBAAKV,UAAU,iBAAf,UACE,sBAAKA,UAAU,wDAAf,UACE,qBAAKO,IAAKI,EAAYX,UAAU,gCAAgCY,MAAM,KAAKH,IAAI,gBAC/E,uBACEV,IAAKT,EACLuB,SAAUjB,EACVQ,KAAK,OACLJ,UAAU,uCACVM,aAAW,4CACXQ,YAAY,gBAGd/B,GACA,qBAAKiB,UAAU,cAAf,SACE,qBAAKA,UAAU,iCAAiCe,KAAK,SACnDC,MAAO,CAAEN,OAAQ,SAAaE,MAAO,UADvC,SAEE,sBAAMZ,UAAU,kBAAhB,4BAIN,qBAAKA,UAAU,GAAf,SAEIR,EAAQlB,KAAI,SAAA2C,GAAK,OACf,sBAAKjB,UAAU,mBAAkCkB,QAAS,kBA5ChD/C,EA4CmE8C,EAAM9C,QA3C7FQ,EAAYR,GADO,IAACA,GA4CV,UACE,qBAAK6B,UAAU,cAAf,SAA8BiB,EAAM7C,OACpC,qBAAKmC,IAAKY,EAAUP,MAAM,KAAKH,IAAI,SAFEQ,EAAM9C,gBCtE5C,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,yCCA1B,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,oCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,kCCA1B,MAA0B,iCCW5BiD,EAAgB,SAACC,GAa5B,MAZe,CACbC,GAAIC,EACJC,GAAIC,EACJC,EAAGC,EACHC,EAAGC,EACHC,GAAIC,EACJC,GAAIC,EACJC,EAAGC,EACHC,GAAIC,EACJC,GAAIC,EACJC,EAAGC,GAESpB,ICxBD,MAA0B,gCCA1B,MAA0B,qC,gBC6E1BqB,EArEO,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,MAAO5D,EAA6B,EAA7BA,UAAWJ,EAAkB,EAAlBA,YAAkB,EACnCD,mBAAS,IAD0B,mBACpDkE,EADoD,KAC/CC,EAD+C,KAU3D,OARAzD,qBAAU,WACR,IAAKL,EAAW,CACd,IAAM+D,EAAMH,EAAMI,mBACZC,EAAU5B,EAAc0B,GAC9BD,EAASG,MAEV,CAACjE,IAGF,qCACE,sBAAKiB,UAAU,2BAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBACEA,UAAU,gDACViD,iBAAe,YACfC,iBAAe,uBACfC,gBAAc,mBACd/C,KAAK,SALP,iCASF,qBAAKJ,UAAU,MAAf,SACE,qBAAKI,KAAK,SAASJ,UAAU,mDAA7B,SACE,qBAAKA,UAAU,WAAWO,IAAK6C,EAAK3C,IAAI,oBAI9C,sBAAKT,UAAU,mEAAf,UACE,qBAAKA,UAAU,iBAAf,SAEIjB,EACI,cAAC,IAAD,CAAU6B,MAAO,IAAKF,OAAQ,MAC9B,qBAAKV,UAAU,YAAYY,MAAM,MAAML,IAAKqC,EAAKnC,IAAI,qBAG7D,qBAAKT,UAAU,gBAAf,SAEIjB,EACI,cAAC,IAAD,CAAU2B,OAAQ,IAAKE,MAAO,MAC9B,qCACA,sBAAMZ,UAAU,QAAhB,SACI2C,EAAMU,SAASC,QAAQ,KAE3B,sBAAMtD,UAAU,gBAAhB,wBAIR,qBAAKA,UAAU,KAAf,SACIjB,EAAY,cAAC,IAAD,CAAU6B,MAAO,MAAS+B,EAAMY,qBAG9CxE,EACI,cAAC,IAAD,CAAU6B,MAAO,MACjB,sBAAKZ,UAAU,GAAf,mBACM,0CADN,IACsB2C,EAAMa,mBAGlC,sBAAKxD,UAAU,WAAf,UACE,qBAAKA,UAAU,OAAOO,IAAKkD,EAAU7C,MAAM,KAAKH,IAAI,kBAClDkC,EAAMhF,OAAS,cAAC,IAAD,CAAUiD,MAAO,WAGtC,cAAC,EAAD,CAAajC,YAAaA,Q,QChDjB+E,EApBO,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAAU,EACnBjF,mBAAS0C,EAAcuC,EAAIZ,qBAAlCH,EAD0B,oBAEjC,OACE,sBAAK5C,UAAU,oDAAf,UACE,qBAAKA,UAAU,yBAAf,SAEI4D,YAAO,IAAIC,KAAKF,EAAIH,iBAAkB,cAG1C,qBAAKxD,UAAU,OAAf,SACE,qBAAKO,IAAKqC,EAAKhC,MAAM,KAAKH,IAAKkD,EAAIJ,mBAAoBvD,UAAU,gBAEnE,sBAAKA,UAAU,cAAf,UACE,uBAAMA,UAAU,kBAAhB,UAAmC8D,KAAKC,MAAMJ,EAAIK,UAAlD,WACA,uBAAMhE,UAAU,iBAAhB,UAAkC8D,KAAKC,MAAMJ,EAAIM,UAAjD,kBC2BOC,EA3CS,SAAC,GAA4B,IAA1B9D,EAAyB,EAAzBA,KAAM+D,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACvC,OACE,qCACE,qBAAKpE,UAAU,GAAf,SACGI,IAEH,sBAAKJ,UAAU,UAAf,UACE,sBAAMA,UAAU,SAAhB,SAA0BmE,IAC1B,sBAAMnE,UAAU,OAAhB,SAAwBoE,OAGf,SAAThE,GACA,gCACE,qBAAKG,IAAI,GAAGE,IAAI,YADlB,SAMS,aAATL,GACA,sBAAKJ,UAAU,OAAf,UACE,sBAAKA,UAAU,4CAAf,UACE,qBAAKA,UAAU,sBAAf,eACA,qBAAKA,UAAU,6BAAf,gBACA,qBAAKA,UAAU,0BAAf,oBAEF,qBAAKA,UAAU,yCAAf,SACE,qBACEA,UAAU,4DACVe,KAAK,cACLC,MAAO,CAAEJ,MAAOuD,EAAS,KACzBE,gBAAc,IACdC,gBAAc,UAGlB,qBAAKtE,UAAU,sBAAf,SACE,qBAAKA,UAAU,sBAAf,wBCqBGuE,EAtDS,SAAC,GAAoC,IAAlCxF,EAAiC,EAAjCA,UAAW4D,EAAsB,EAAtBA,MAAO9D,EAAe,EAAfA,SAAe,EAChCH,mBAAS,IADuB,mBACnD8F,EADmD,KAC5CC,EAD4C,KAc1D,OAXArF,qBAAU,WACHL,GACH0F,EAAS,CACP,CAAErE,KAAM,OAAQ+D,OAAQxB,EAAM+B,WAAWpB,QAAQ,GAAIc,KAAM,OAC3D,CAAEhE,KAAM,WAAY+D,OAAQxB,EAAMgC,SAAUP,KAAM,KAClD,CAAEhE,KAAM,aAAc+D,OAAQxB,EAAMiC,WAAWtB,QAAQ,GAAIc,KAAM,SACjE,CAAEhE,KAAM,eAAgB+D,OAAQxB,EAAMkC,aAAcT,KAAM,UAG7D,CAACrF,IAGF,sBAAKiB,UAAU,4BAAf,UACE,qBAAKA,UAAU,yFAAf,SACIjB,EACE,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGT,KAAI,SAAAwG,GAAC,OACrB,cAAC,IAAD,CAAU9E,UAAU,kBAAkBY,MAAO,IAAKF,OAAQ,KAAUoE,MAEpEjG,EAASP,KAAI,SAAAqF,GAAG,OAChB,cAAC,EAAD,CAAeA,IAAKA,GAAUA,EAAIxF,SAIxC,qBAAK6B,UAAU,oDAAf,qCAGA,qBAAKA,UAAU,kBAAf,SACIjB,EACE,CAAC,EAAG,EAAG,EAAG,GAAGT,KAAI,SAAAwG,GAAC,OAClB,qBAAa9E,UAAU,kBAAvB,SACE,cAAC,IAAD,CAAUA,UAAU,gCAAgCY,MAAO,IAAKF,OAAQ,KAAUoE,IAD1EA,MAIVN,EAAMlG,KAAI,SAACyG,EAAMC,GAAP,OACV,qBAAehF,UAAU,kBAAzB,SACE,qBAAKA,UAAU,6CACbgB,MACgB,aAAd+D,EAAK3E,MAAqC,SAAd2E,EAAK3E,KAC7B,CAAEM,OAAQ,SACV,CAAEA,OAAQ,SAJlB,SAME,cAAC,EAAD,eAAqBqE,OAPfC,YClBPC,EAjBI,WAAO,IAAD,EACkCxG,EAAWnB,UAA5DI,EADe,EACfA,WAAYmB,EADG,EACHA,SAAUE,EADP,EACOA,UAAWJ,EADlB,EACkBA,YAEzC,OACE,cAAC,gBAAD,CAAeuG,MAAM,UAAUC,eAAe,OAA9C,SACE,sBAAKnF,UAAU,qBAAf,UACE,qBAAKA,UAAU,mCAAf,SACE,cAAC,EAAD,CAAejB,UAAWA,EAAW4D,MAAOjF,EAAYiB,YAAaA,MAEvE,qBAAKqB,UAAU,0CAAf,SACE,cAAC,EAAD,CAAiBjB,UAAWA,EAAW4D,MAAOjF,EAAYmB,SAAUA,Y,YCV9EuG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f31c5a9f.chunk.js","sourcesContent":["import axios from 'axios'\n\n// Enable cors on this page\n// https://cors-anywhere.herokuapp.com/\nconst cors = 'https://cors-anywhere.herokuapp.com/'\nconst URLBase = cors + 'https://www.metaweather.com/api/location/'\nconst URLSearch = cors + 'https://www.metaweather.com/api/location/search/'\n\nexport const getWeather = async (location = 44418) => {\n  const { data } = await axios.get(`${URLBase}${location}`)\n  const currentDay = {\n    title: data.title,\n    ...data.consolidated_weather[0]\n  }\n  data.consolidated_weather.shift()\n  const weekForecast = data.consolidated_weather\n  return { currentDay, weekForecast }\n}\nexport const getMatches = async (location) => {\n  const data = await axios.get(URLSearch, { params: { query: location } })\n  if (data.data.length === 0) return [{ id: '404', name: 'No matches' }]\n  const cities = data.data.map(city => ({\n    name: city.title,\n    id: city.woeid\n  }))\n  return cities\n}\n","import { useEffect, useState } from 'react'\nimport { getWeather } from '../helpers/weatherAPI'\n\nconst useWeather = () => {\n  const [location, setLocation] = useState()\n  const [currentDay, setCurrentDay] = useState({})\n  const [forecast, setForecast] = useState({})\n  const [isLoading, setIsLoading] = useState(true)\n\n  const fetchWeather = async () => {\n    setIsLoading(true)\n    try {\n      const { currentDay, weekForecast } = await getWeather(location)\n      setCurrentDay(currentDay)\n      setForecast(weekForecast)\n    } catch (e) {\n      console.log('Hey Error', e)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    console.log('Location change to ', location)\n    fetchWeather()\n  }, [location])\n\n  return { currentDay, forecast, setLocation, isLoading }\n}\n\nexport default useWeather\n","export default __webpack_public_path__ + \"static/media/closeX.093da90d.svg\";","export default __webpack_public_path__ + \"static/media/lupa.c368655f.svg\";","export default __webpack_public_path__ + \"static/media/chevronR.eb5d9597.svg\";","import React, { useRef, useState } from 'react'\nimport { getMatches } from '../helpers/weatherAPI'\nimport closeIcon from './../assets/closeX.svg'\nimport searchIcon from './../assets/lupa.svg'\nimport chevronR from './../assets/chevronR.svg'\n\nconst SearchPanel = ({ setLocation }) => {\n  const inputText = useRef(null)\n  const [matches, setMatches] = useState([])\n  const [isLoading, setLoading] = useState(false)\n  const canvas = useRef(null)\n\n  const searchLocation = async () => {\n    if (inputText.current.value) {\n      setMatches([])\n      setLoading(true)\n      try {\n        const cities = await getMatches(inputText.current.value)\n        setMatches(cities)\n      } catch (e) {\n        console.log('HEY ', e)\n      } finally {\n        setLoading(false)\n      }\n    }\n  }\n  const handleSearch = (id) => {\n    setLocation(id)\n    // Close on click search\n  }\n  return (\n    <div\n      ref={canvas}\n      className=\"offcanvas offcanvas-start bg-dark p-3\"\n      data-bs-scroll=\"true\"\n      data-bs-backdrop=\"false\"\n      tabIndex=\"-1\"\n      id=\"locationSearchPanel\">\n      <div className=\"offcanvas-header text-end flex-row-reverse\">\n        <div\n          type=\"button\"\n          className=\"\"\n          data-bs-dismiss=\"offcanvas\"\n          aria-label=\"Close\">\n          <img src={closeIcon} alt=\"Close\" height=\"25\" />\n        </div>\n      </div>\n      <div className=\"offcanvas-body\">\n        <div className=\"input-group position-relative align-items-center pb-5\">\n          <img src={searchIcon} className=\"position-absolute search ms-2\" width=\"25\" alt=\"Search icon\"></img>\n          <input\n            ref={inputText}\n            onChange={searchLocation}\n            type=\"text\"\n            className=\"form-control bg-dark text-light ps-5\"\n            aria-label=\"Text input with segmented dropdown button\"\n            placeholder=\"Location\"/>\n        </div>\n        {\n          isLoading &&\n          <div className=\"text-center\">\n            <div className=\"spinner-border text-light fs-4\" role=\"status\"\n              style={{ height: 2.5 + 'rem', width: 2.5 + 'rem' }}>\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>\n        }\n        <div className=\"\">\n          {\n            matches.map(match => (\n              <div className=\"p-3 d-flex match\" key={match.id} onClick={() => handleSearch(match.id)}>\n                <div className=\"flex-grow-1\">{match.name}</div>\n                <img src={chevronR} width=\"15\" alt=\"Go\" />\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchPanel\n","export default __webpack_public_path__ + \"static/media/Sleet.d39a5b7f.svg\";","export default __webpack_public_path__ + \"static/media/Hail.831ff042.svg\";","export default __webpack_public_path__ + \"static/media/Thunderstorm.b757a57e.svg\";","export default __webpack_public_path__ + \"static/media/HeavyRain.0c40fed9.svg\";","export default __webpack_public_path__ + \"static/media/LightRain.e8838808.svg\";","export default __webpack_public_path__ + \"static/media/Showers.2d98cbcf.svg\";","export default __webpack_public_path__ + \"static/media/HeavyCloud.5030ee0b.svg\";","export default __webpack_public_path__ + \"static/media/LightCloud.cb911034.svg\";","export default __webpack_public_path__ + \"static/media/Clear.f7fd242b.svg\";","export default __webpack_public_path__ + \"static/media/Snow.15dbffd6.svg\";","import Sleet from './../assets/Sleet.svg'\nimport Hail from './../assets/Hail.svg'\nimport Thunderstorm from './../assets/Thunderstorm.svg'\nimport HeavyRain from './../assets/HeavyRain.svg'\nimport LightRain from './../assets/LightRain.svg'\nimport Showers from './../assets/Showers.svg'\nimport HeavyCloud from './../assets/HeavyCloud.svg'\nimport LightCloud from './../assets/LightCloud.svg'\nimport Clear from './../assets/Clear.svg'\nimport Snow from './../assets/Snow.svg'\n\nexport const getWeatherImg = (abbr) => {\n  const images = {\n    sn: Snow,\n    sl: Sleet,\n    h: Hail,\n    t: Thunderstorm,\n    hr: HeavyRain,\n    lr: LightRain,\n    s: Showers,\n    hc: HeavyCloud,\n    lc: LightCloud,\n    c: Clear\n  }\n  return images[abbr]\n}\n","export default __webpack_public_path__ + \"static/media/gps.4e6cb7a4.svg\";","export default __webpack_public_path__ + \"static/media/position.637860d9.svg\";","import React, { useEffect, useState } from 'react'\nimport SearchPanel from './SearchPanel'\nimport { getWeatherImg } from '../helpers/imageList'\nimport gps from './../assets/gps.svg'\nimport position from './../assets/position.svg'\nimport Skeleton from 'react-loading-skeleton'\n\n// eslint-disable-next-line camelcase\nconst ActualWeather = ({ today, isLoading, setLocation }) => {\n  const [img, setImage] = useState('')\n  useEffect(() => {\n    if (!isLoading) {\n      const pos = today.weather_state_abbr\n      const imgTest = getWeatherImg(pos)\n      setImage(imgTest)\n    }\n  }, [isLoading])\n\n  return (\n    <>\n      <div className=\"row py-4 g-0 text-center\">\n        <div className=\"col\">\n          <div\n            className=\"btn btn-primary shadow-lg text-light border-0\"\n            data-bs-toggle=\"offcanvas\"\n            data-bs-target=\"#locationSearchPanel\"\n            aria-controls=\"offcanvasExample\"\n            type=\"button\">\n            Search for places\n          </div>\n        </div>\n        <div className=\"col\">\n          <div type=\"button\" className=\"shadow-lg btn btn-primary btn-gps rounded-circle\">\n            <img className=\"gps-icon\" src={gps} alt=\"Location\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"d-flex min-vh-100 justify-content-evenly flex-column text-center\">\n        <div className=\"icon img-fluid\">\n          {\n            isLoading\n              ? <Skeleton width={150} height={150}/>\n              : <img className=\"img-fluid\" width=\"150\" src={img} alt=\"Actual Weather\" />\n          }\n        </div>\n        <div className=\"forecast lh-1\">\n          {\n            isLoading\n              ? <Skeleton height={130} width={220}/>\n              : <>\n                <span className=\"today\">\n                  { today.the_temp.toFixed(1) }\n                </span>\n                <span className=\"h3 text-light\">°C</span>\n              </>\n          }\n        </div>\n        <div className=\"h2\">\n          { isLoading ? <Skeleton width={150}/> : today.weather_state_name}\n        </div>\n        {\n          isLoading\n            ? <Skeleton width={100}/>\n            : <div className=\"\">\n              Today <span>•</span> {today.applicable_date}\n            </div>\n        }\n        <div className=\"location\">\n          <img className=\"me-2\" src={position} width=\"20\" alt=\"Icon Location\" />\n          { today.title || <Skeleton width={25}/> }\n        </div>\n      </div>\n      <SearchPanel setLocation={setLocation}/>\n    </>\n  )\n}\n\nexport default ActualWeather\n","import { format } from 'date-fns'\nimport React, { useState } from 'react'\nimport { getWeatherImg } from '../../helpers/imageList'\n\nconst DailyForecast = ({ day }) => {\n  const [img] = useState(getWeatherImg(day.weather_state_abbr))\n  return (\n    <div className=\"card bg-dark forecast text-center m-2 mx-lg-1 p-3\">\n      <div className=\"fw-500 fs-6 text-light\">\n        {\n          format(new Date(day.applicable_date), 'E, d MMM')\n        }\n      </div>\n      <div className=\"my-3\">\n        <img src={img} width=\"45\" alt={day.weather_state_name} className=\"img-fluid\" />\n      </div>\n      <div className=\"fw-500 fs-6\">\n        <span className=\"text-light me-2\">{Math.round(day.max_temp)}°C</span>\n        <span className=\"lightgray ms-2\">{Math.round(day.min_temp)}°C</span>\n      </div>\n    </div>\n  )\n}\n\nexport default DailyForecast\n","import React from 'react'\n\nconst ForecastDetails = ({ type, number, unit }) => {\n  return (\n    <>\n      <div className=\"\">\n        {type}\n      </div>\n      <div className=\"measure\">\n        <span className=\"number\">{number}</span>\n        <span className=\"type\">{unit}</span>\n      </div>\n      {\n        type === 'Wind' &&\n        <div>\n          <img src=\"\" alt=\"Compass\" />\n          WSW\n        </div>\n      }\n      {\n        type === 'Humidity' &&\n        <div className=\"px-4\">\n          <div className=\"indicators d-flex justify-content-between\">\n            <div className=\"lightgray bottom-20\">0</div>\n            <div className=\"lightgray bottom-20 middle\">50</div>\n            <div className=\"lightgray bottom-20 end\">100</div>\n          </div>\n          <div className=\"progress rounded-pill overflow-visible\">\n            <div\n              className=\"progress-bar rounded-pill progress-bar-striped bg-warning\"\n              role=\"progressbar\"\n              style={{ width: number + '%' }}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\">\n            </div>\n          </div>\n          <div className=\"indicators text-end\">\n            <div className=\"lightgray bottom-20\">%</div>\n          </div>\n        </div>\n      }\n    </>\n  )\n}\n\nexport default ForecastDetails\n","import React, { useEffect, useState } from 'react'\nimport Skeleton from 'react-loading-skeleton'\nimport DailyForecast from './cards/DailyForecast'\nimport ForecastDetails from './cards/ForecastDetails'\nconst WeatherForecast = ({ isLoading, today, forecast }) => {\n  const [stats, setStats] = useState([])\n\n  useEffect(() => {\n    if (!isLoading) {\n      setStats([\n        { type: 'Wind', number: today.wind_speed.toFixed(0), unit: 'mph' },\n        { type: 'Humidity', number: today.humidity, unit: '%' },\n        { type: 'Visibility', number: today.visibility.toFixed(1), unit: 'miles' },\n        { type: 'Air Pressure', number: today.air_pressure, unit: 'mb' }\n      ])\n    }\n  }, [isLoading])\n\n  return (\n    <div className=\"container p-2 pt-5 p-md-5\">\n      <div className=\"d-flex flex-wrap justify-content-evenly justify-content-xxl-between align-items-center\">\n        { isLoading\n          ? [1, 2, 3, 4, 5].map(i => (\n            <Skeleton className=\"m-2 mx-lg-1 p-3\" width={120} height={160} key={i}/>\n          ))\n          : forecast.map(day => (\n            <DailyForecast day={day} key={day.id}/>\n          ))\n        }\n      </div>\n      <div className=\"my-3 mx-4 my-md-4 mx-md-0 fs-4 fw-bold text-light\">\n        Today’s Highlights\n      </div>\n      <div className=\"row text-center\">\n        { isLoading\n          ? [1, 2, 3, 4].map(i => (\n            <div key={i} className=\"col-12 col-md-6\">\n              <Skeleton className=\"my-3 mx-4 my-md-4 mx-md-0 p-3\" width={370} height={200} key={i}/>\n            </div>\n          ))\n          : stats.map((stat, idx) => (\n            <div key={idx} className=\"col-12 col-md-6\">\n              <div className=\"card bg-dark my-3 mx-4 my-md-4 mx-md-0 p-3\"\n                style={\n                  stat.type === 'Humidity' || stat.type === 'Wind'\n                    ? { height: 204 + 'px' }\n                    : { height: 160 + 'px' }\n                }>\n                <ForecastDetails {...stat}/>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default WeatherForecast\n","import React from 'react'\nimport useWeather from '../hooks/useWeather'\nimport ActualWeather from './ActualWeather'\nimport WeatherForecast from './WeatherForecast'\nimport { SkeletonTheme } from 'react-loading-skeleton'\n\nconst MainScreen = () => {\n  const { currentDay, forecast, isLoading, setLocation } = useWeather(location)\n\n  return (\n    <SkeletonTheme color=\"#100E1D\" highlightColor=\"#444\">\n      <div className=\"row g-0 text-light\">\n        <div className=\"col-12 col-md-4 bg-dark bg-cloud\">\n          <ActualWeather isLoading={isLoading} today={currentDay} setLocation={setLocation}/>\n        </div>\n        <div className=\"col-12 col-md-8 bg-secondary p-0 p-xl-5\">\n          <WeatherForecast isLoading={isLoading} today={currentDay} forecast={forecast}/>\n        </div>\n      </div>\n    </SkeletonTheme>\n  )\n}\n\nexport default MainScreen\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport MainScreen from './components/MainScreen'\nimport 'bootstrap'\nimport './scss/custom.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainScreen />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}